if (i==1) { plot(S2[1],S2[2],xlim=c(-.25,.25),ylim=c(-.25,.25)) } else { points(S2[1],S2[2]) }
Obs = S2%*%w[1:2,]%*%t(C)+.1*(runif(length(Obs))-.5)
Obs[Obs>1]=1;Obs[Obs<0]=0
}
Obs = matrix(runif(1000),ncol=dimspace,nrow=1)
for (i in 1:100) {
print(mean(Obs))
S2 = (Obs%*%ginv(t(C))%*%ginv(w))[,1:2]
if (i==1) { plot(S2[1],S2[2],xlim=c(-.25,.25),ylim=c(-.25,.25)) } else { points(S2[1],S2[2]) }
Obs = S2%*%w[1:2,]%*%t(C)+.1*(runif(length(Obs))-.5)
Obs[Obs>1]=1;Obs[Obs<0]=0
}
Obs = matrix(runif(1000),ncol=dimspace,nrow=1)
for (i in 1:100) {
print(mean(Obs))
S2 = (Obs%*%ginv(t(C))%*%ginv(w))[,1:2]
if (i==1) { plot(S2[1],S2[2],xlim=c(-.25,.25),ylim=c(-.25,.25)) } else { points(S2[1],S2[2]) }
Obs = S2%*%w[1:2,]%*%t(C)+.1*(runif(length(Obs))-.5)
Obs[Obs>1]=1;Obs[Obs<0]=0
}
Obs = matrix(runif(1000),ncol=dimspace,nrow=1)
for (i in 1:100) {
print(mean(Obs))
S2 = (Obs%*%ginv(t(C))%*%ginv(w))[,1:2]
if (i==1) { plot(S2[1],S2[2],xlim=c(-.25,.25),ylim=c(-.25,.25)) } else { points(S2[1],S2[2]) }
Obs = S2%*%w[1:2,]%*%t(C)+.1*(runif(length(Obs))-.5)
Obs[Obs>1]=1;Obs[Obs<0]=0
}
Obs = matrix(runif(1000),ncol=dimspace,nrow=1)
for (i in 1:100) {
print(mean(Obs))
S2 = (Obs%*%ginv(t(C))%*%ginv(w))[,1:2]
if (i==1) { plot(S2[1],S2[2],xlim=c(-.25,.25),ylim=c(-.25,.25)) } else { points(S2[1],S2[2]) }
Obs = S2%*%w[1:2,]%*%t(C)+.1*(runif(length(Obs))-.5)
Obs[Obs>1]=1;Obs[Obs<0]=0
}
Obs = matrix(runif(1000),ncol=dimspace,nrow=1)
for (i in 1:100) {
print(mean(Obs))
S2 = (Obs%*%ginv(t(C))%*%ginv(w))[,1:2]
if (i==1) { plot(S2[1],S2[2],xlim=c(-.25,.25),ylim=c(-.25,.25)) } else { points(S2[1],S2[2]) }
Obs = S2%*%w[1:2,]%*%t(C)+.1*(runif(length(Obs))-.5)
Obs[Obs>1]=1;Obs[Obs<0]=0
}
Obs = matrix(runif(1000),ncol=dimspace,nrow=1)
for (i in 1:100) {
print(mean(Obs))
S2 = (Obs%*%ginv(t(C))%*%ginv(w))[,1:2]
if (i==1) { plot(S2[1],S2[2],xlim=c(-.25,.25),ylim=c(-.25,.25)) } else { points(S2[1],S2[2]) }
Obs = S2%*%w[1:2,]%*%t(C)+.1*(runif(length(Obs))-.5)
Obs[Obs>1]=1;Obs[Obs<0]=0
}
Obs = matrix(runif(1000),ncol=dimspace,nrow=1)
for (i in 1:100) {
print(mean(Obs))
S2 = (Obs%*%ginv(t(C))%*%ginv(w))[,1:2]
if (i==1) { plot(S2[1],S2[2],xlim=c(-.25,.25),ylim=c(-.25,.25)) } else { points(S2[1],S2[2]) }
Obs = S2%*%w[1:2,]%*%t(C)+.1*(runif(length(Obs))-.5)
Obs[Obs>1]=1;Obs[Obs<0]=0
}
Obs = matrix(runif(1000),ncol=dimspace,nrow=1)
for (i in 1:100) {
print(mean(Obs))
S2 = (Obs%*%ginv(t(C))%*%ginv(w))[,1:2]
if (i==1) { plot(S2[1],S2[2],xlim=c(-.25,.25),ylim=c(-.25,.25)) } else { points(S2[1],S2[2]) }
Obs = S2%*%w[1:2,]%*%t(C)+.1*(runif(length(Obs))-.5)
Obs[Obs>1]=1;Obs[Obs<0]=0
}
Obs = matrix(runif(1000),ncol=dimspace,nrow=1)
for (i in 1:100) {
print(mean(Obs))
S2 = (Obs%*%ginv(t(C))%*%ginv(w))[,1:2]
if (i==1) { plot(S2[1],S2[2],xlim=c(-.25,.25),ylim=c(-.25,.25)) } else { points(S2[1],S2[2]) }
Obs = S2%*%w[1:2,]%*%t(C)+.1*(runif(length(Obs))-.5)
Obs[Obs>1]=1;Obs[Obs<0]=0
}
Obs = matrix(runif(1000),ncol=dimspace,nrow=1)
for (i in 1:100) {
print(mean(Obs))
S2 = (Obs%*%ginv(t(C))%*%ginv(w))[,1:2]
if (i==1) { plot(S2[1],S2[2],xlim=c(-.25,.25),ylim=c(-.25,.25)) } else { points(S2[1],S2[2]) }
Obs = S2%*%w[1:2,]%*%t(C)+.1*(runif(length(Obs))-.5)
Obs[Obs>1]=1;Obs[Obs<0]=0
}
Obs = matrix(runif(1000),ncol=dimspace,nrow=1)
for (i in 1:100) {
print(mean(Obs))
S2 = (Obs%*%ginv(t(C))%*%ginv(w))[,1:2]
if (i==1) { plot(S2[1],S2[2],xlim=c(-.25,.25),ylim=c(-.25,.25)) } else { points(S2[1],S2[2]) }
Obs = S2%*%w[1:2,]%*%t(C)+.1*(runif(length(Obs))-.5)
Obs[Obs>1]=1;Obs[Obs<0]=0
}
Obs = matrix(runif(1000),ncol=dimspace,nrow=1)
for (i in 1:100) {
print(mean(Obs))
S2 = (Obs%*%ginv(t(C))%*%ginv(w))[,1:2]
if (i==1) { plot(S2[1],S2[2],xlim=c(-.25,.25),ylim=c(-.25,.25)) } else { points(S2[1],S2[2]) }
Obs = S2%*%w[1:2,]%*%t(C)+.1*(runif(length(Obs))-.5)
Obs[Obs>1]=1;Obs[Obs<0]=0
}
Obs = matrix(runif(1000),ncol=dimspace,nrow=1)
for (i in 1:100) {
print(mean(Obs))
S2 = (Obs%*%ginv(t(C))%*%ginv(w))[,1:2]
if (i==1) { plot(S2[1],S2[2],xlim=c(-.25,.25),ylim=c(-.25,.25)) } else { points(S2[1],S2[2]) }
Obs = S2%*%w[1:2,]%*%t(C)+.1*(runif(length(Obs))-.5)
Obs[Obs>1]=1;Obs[Obs<0]=0
}
Obs = matrix(runif(1000),ncol=dimspace,nrow=1)
for (i in 1:100) {
print(mean(Obs))
S2 = (Obs%*%ginv(t(C))%*%ginv(w))[,1:2]
if (i==1) { plot(S2[1],S2[2],xlim=c(-.25,.25),ylim=c(-.25,.25)) } else { points(S2[1],S2[2]) }
Obs = S2%*%w[1:2,]%*%t(C)+.1*(runif(length(Obs))-.5)
Obs[Obs>1]=1;Obs[Obs<0]=0
}
s = (s%*%w[,latents]%*%C)%*%ginv(C)%*%ginv(w[,latents])
s = runif(latents)
s = (s%*%w[,latents]%*%C)%*%ginv(C)%*%ginv(w[,latents])
dimspace = 10; defstates = 100; latents = 2
Obs2 = matrix(runif(1000),ncol=dimspace,nrow=defstates)
svdRes = svd(Obs2)
S = svdRes$u
w = diag(svdRes$d)
C = t(svdRes$v)
s = runif(latents)
for (i in 1:2) {
s = (s%*%w[,latents]%*%C)%*%ginv(C)%*%ginv(w[,latents])
}
s
(s%*%w[,latents]%*%C)
s = (s%*%w[,1:latents]%*%C)%*%ginv(C)%*%ginv(w[,1:latents])
(s%*%w[,1:latents]%*%C)
s
s = (s%*%w[1:latents,]%*%C)%*%ginv(C)%*%ginv(w[1:latents,])
C
latents
s = (s%*%w[1:latents,]%*%C)%*%ginv(C)%*%ginv(w[1:latents,])
}
Obs = matrix(runif(1000),ncol=dimspace,nrow=1)
for (i in 1:100) {
print(mean(Obs))
S2 = (Obs%*%ginv(t(C))%*%ginv(w))[,1:2]
s
s = runif(latents)
for (i in 1:2) {
s = (s%*%w[1:latents,]%*%C)%*%ginv(C)%*%ginv(w[1:latents,])
}
s = (s%*%w[1:latents,]%*%C)%*%ginv(C)%*%ginv(w[1:latents,])
asdf
)
s = runif(latents)
for (i in 1:2) {
s = (s%*%w[1:latents,]%*%C)%*%ginv(C)%*%ginv(w[1:latents,])
}
s
s = runif(latents)
ss = c()
for (i in 1:2) {
s = (s%*%w[1:latents,]%*%C)%*%ginv(C)%*%ginv(w[1:latents,])
ss = rbind(ss,s)
}
ss
plot(ss[,1],ss[,2])
plot(ss[,1],ss[,2])
s = runif(latents)
ss = c(s)
for (i in 1:20) {
s = (s%*%w[1:latents,]%*%C)%*%ginv(C)%*%ginv(w[1:latents,])
ss = rbind(ss,s)
}
plot(ss[,1],ss[,2])
ss
s = runif(latents)
ss = c(s)
for (i in 1:200) {
s = (s%*%w[1:latents,]%*%C)%*%ginv(C)%*%ginv(w[1:latents,])
ss = rbind(ss,s)
}
plot(ss[,1],ss[,2])
s = runif(latents)
ss = c(s)
for (i in 1:2000) {
s = (s%*%w[1:latents,]%*%C)%*%ginv(C)%*%ginv(w[1:latents,])
ss = rbind(ss,s)
}
plot(ss[,1],ss[,2])
s = runif(latents)
ss = c(s)
for (i in 1:2000) {
s = (s%*%w[1:latents,]%*%C)%*%ginv(C)%*%ginv(w[1:latents,])
ss = rbind(ss,s)
}
plot(ss[,1],ss[,2])
s = runif(latents)
ss = c(s)
for (i in 1:2000) {
s = (s%*%w[1:latents,]%*%C)%*%ginv(C)%*%ginv(w[1:latents,])
ss = rbind(ss,s)
}
plot(ss[,1],ss[,2])
s = runif(latents)
ss = c(s)
for (i in 1:20000) {
s = (s%*%w[1:latents,]%*%C)%*%ginv(C)%*%ginv(w[1:latents,])
ss = rbind(ss,s)
}
plot(ss[,1],ss[,2])
ss
s = runif(latents)
ss = c(s)
for (i in 1:2000) {
s = (s%*%w[1:latents,]%*%C)%*%ginv(C)%*%ginv(w[1:latents,])+.01*runif(latents)
ss = rbind(ss,s)
}
plot(ss[,1],ss[,2])
ss
s = runif(latents)
ss = c(s)
for (i in 1:2000) {
s = (s%*%w[1:latents,]%*%C)%*%ginv(C)%*%ginv(w[1:latents,])+.01*(runif(latents)-.5)
ss = rbind(ss,s)
}
plot(ss[,1],ss[,2])
s = runif(latents)
ss = c(s)
for (i in 1:2000) {
s = (s%*%w[1:latents,]%*%C)%*%ginv(C)%*%ginv(w[1:latents,])+.01*(runif(latents)-.5)
ss = rbind(ss,s)
}
plot(ss[,1],ss[,2])
s = runif(latents)
ss = c(s)
for (i in 1:20000) {
s = (s%*%w[1:latents,]%*%C)%*%ginv(C)%*%ginv(w[1:latents,])+.01*(runif(latents)-.5)
ss = rbind(ss,s)
}
plot(ss[,1],ss[,2])
library(Matrix)
library(irlba)
library(tm)
setwd('/Users/rickdale/Dropbox/duties/ucmservice/CISgradchair/SelfAssessments/2014/lsa_analysis')
a = read.table('abstracts.txt',sep='\n',quote = "")
colnames(a) = list('abs')
a$abs = as.character(a$abs)
abs = a$abs
ts = Corpus(VectorSource(abs)) # using tm to strip / clean
ts = tm_map(ts, removeWords, stopwords("english"))
removepunct = function(x) { return(gsub("[[:punct:]]","",x)) }
ts = tm_map(ts, removepunct)
removenum = function(x) { return(gsub("[0-9]","",x)) }
ts = tm_map(ts, removenum)
doublespace = function(x) { return(gsub("  "," ",x)) }
ts = tm_map(ts, doublespace)
abs = PlainTextDocument(ts) # make it plain
chunk = paste(abs,collapse=" ") # cheap plural removal
words = unique(unlist(strsplit(doublespace(chunk),split=" ")))
pukeplural = function(x) {
return(gsub(search_term,allstring_minus_last,x))
}
for (w in words) {
search_term <- w
lastletter <- substr(w,nchar(w),nchar(w))
allstring_minus_last <- substr(w,1,nchar(w)-1)
if (lastletter=="s" & allstring_minus_last %in% words & nchar(w)>3) {
abs = lapply(abs, pukeplural)
}
}
ts = Corpus(VectorSource(abs))
ts
str(ts[483])
str(ts[482])
abs[482]
setwd('/Users/rickdale/Dropbox/duties/ucmservice/CISgradchair/SelfAssessments/2014/lsa_analysis')
a = read.table('abstracts.txt',sep='\n',quote = "")
colnames(a) = list('abs')
a$abs = as.character(a$abs)
abs = a$abs
abs[482]
setwd('/Users/rickdale/Dropbox/duties/ucmservice/CISgradchair/SelfAssessments/2014/lsa_analysis')
a = read.table('abstracts.txt',sep='\n',quote = "")
colnames(a) = list('abs')
a$abs = as.character(a$abs)
abs = a$abs
abs[482]
dim(abs)
length(abs)
setwd('/Users/rickdale/Dropbox/duties/ucmservice/CISgradchair/SelfAssessments/2014/lsa_analysis')
a = read.table('abstracts.txt',sep='\n',quote = "")
colnames(a) = list('abs')
a$abs = as.character(a$abs)
abs = a$abs
length(abs)
setwd('/Users/rickdale/Dropbox/duties/ucmservice/CISgradchair/SelfAssessments/2014/lsa_analysis')
a = read.table('abstracts.txt',sep='\n',quote = "")
colnames(a) = list('abs')
a$abs = as.character(a$abs)
abs = a$abs
length(abs)
abs[483]
abs[482]
abs[484]
abs[483]
abs[947]
abs[260]
abs[670]
ts = Corpus(VectorSource(abs)) # using tm to strip / clean
ts = tm_map(ts, removeWords, stopwords("english"))
removepunct = function(x) { return(gsub("[[:punct:]]","",x)) }
ts = tm_map(ts, removepunct)
removenum = function(x) { return(gsub("[0-9]","",x)) }
ts = tm_map(ts, removenum)
doublespace = function(x) { return(gsub("  "," ",x)) }
ts = tm_map(ts, doublespace)
abs = PlainTextDocument(ts) # make it plain
chunk = paste(abs,collapse=" ") # cheap plural removal
words = unique(unlist(strsplit(doublespace(chunk),split=" ")))
pukeplural = function(x) {
return(gsub(search_term,allstring_minus_last,x))
}
for (w in words) {
search_term <- w
lastletter <- substr(w,nchar(w),nchar(w))
allstring_minus_last <- substr(w,1,nchar(w)-1)
if (lastletter=="s" & allstring_minus_last %in% words & nchar(w)>3) {
abs = lapply(abs, pukeplural)
}
}
ts = Corpus(VectorSource(abs))
ts[484]
ts[483]
str(ts[483])
str(ts[260])
str(ts[947])
str(ts[620])
str(ts[260])
str(ts[670])
tXd = DocumentTermMatrix(ts)
# convert to sparse matrix
tXd.mat = sparseMatrix(tXd$i,tXd$j,x=tXd$v) # removes col's with 0's... need to fix
save(tXd.mat,tXd,file="tXd.Rdata")
#load('tXd.Rdata')
# tXd.mat too big for non-sparse SVD; use irlba
S = irlba(tXd.mat,nu=25,nv=25) # v
cosine_similarity_matrix = function(ix) {
A = X[ix[1],]
B = X[ix[2],]
return(sum(A*B)/sqrt(sum(A^2)*sum(B^2)))
}
# beautiful code to build dissimilarity matrix, using cos.sim above:
# http://stats.stackexchange.com/questions/31565/is-there-an-r-function-that-will-compute-the-cosine-dissimilarity-matrix
n = nrow(S)
cmb = expand.grid(i=1:n, j=1:n)
C = matrix(apply(cmb,1,cosine_similarity_matrix),n,n) # get all pairwise cosine similarity measures
cmb = expand.grid(i=1:n, j=1:n)
n = nrow(S)
cmb = expand.grid(i=1:n, j=1:n)
S
S = irlba(tXd.mat,nu=25,nv=25) # very slow beyond 30 or so
X = S$u
n = nrow(X)
cmb = expand.grid(i=1:n, j=1:n)
C = matrix(apply(cmb,1,cosine_similarity_matrix),n,n) # get all pairwise cosine similarity measures
dim(C)
unlist(C)
ms = data.frame(m=mean(C[lower.tri(C)]),n=dim(C)[1]))
ms = data.frame(m=mean(C[lower.tri(C)]),n=dim(C)[1]))
C'1'
C[1]
C[1000]
C[C<1,]
C[C<1]
hist(C[C<1],100)
studs = c(483,620,260,670)
hist(C[C<1],1000)
hist(C[C<1],100)
hist(C[C<1],100,main='Distribution of topical similarity at CogSci 2013')
hist(C[C<1],100,main='Distribution of topical similarity at CogSci 2013',ylab='Density',xlab='Similarity score')
hist(C[C<1],100,main='Distribution of topical similarity at CogSci 2013',ylab='Density',xlab='Similarity score between a pair of abstracts')
hist(C[C<1],100,main='Distribution of topical similarity at CogSci 2013',ylab='Density',xlab='Similarity score between a pair of abstracts (cosine)')
cmb = expand.grid(i=studs, j=studs)
cmb
C = matrix(apply(cmb,1,cosine_similarity_matrix),studs,studs)
C = matrix(apply(cmb,1,cosine_similarity_matrix),length(studs),length(studs))
C
cmb = expand.grid(i=studs, j=studs)
C = matrix(apply(cmb,1,cosine_similarity_matrix),length(studs),length(studs))
C = C[C<1]
C
S = irlba(tXd.mat,nu=10,nv=10) # very slow beyond 30 or so
X = S$u
n = nrow(X)
cmb = expand.grid(i=1:n, j=1:n)
C = matrix(apply(cmb,1,cosine_similarity_matrix),n,n) # get all pairwise cosine similarity measures
hist(C[C<1],100,main='Distribution of topical similarity at CogSci 2013',ylab='Density',xlab='Similarity score between a pair of abstracts (cosine)')
cmb = expand.grid(i=studs, j=studs)
C = matrix(apply(cmb,1,cosine_similarity_matrix),length(studs),length(studs))
C = C[C<1]
C
mean(C)
points(mean(C),1)
points(mean(C),100)
points(mean(C),1000)
points(mean(C),1000,pch=2)
points(mean(C),1000,pch=11)
points(mean(C),1000,pch=21)
points(mean(C),1000,pch=15)
points(c(mean(C)-sd(C),mean(C)+sd(C)),c(1000,100),type='l')
points(mean(C),1000,pch=15)
points(c(mean(C)-sd(C),mean(C)+sd(C)),c(1000,1000),type='l')
points(c(mean(C)-sd(C),mean(C)+sd(C)),c(1000,1000),type='l',lwd=2)
hist(C[C<1],100,main='Distribution of topical similarity at CogSci 2013',ylab='Density',xlab='Similarity score between a pair of abstracts (cosine)')
cmb = expand.grid(i=studs, j=studs)
C = matrix(apply(cmb,1,cosine_similarity_matrix),length(studs),length(studs))
C = C[C<1]
points(mean(C),1000,pch=15)
points(c(mean(C)-sd(C),mean(C)+sd(C)),c(1000,1000),type='l',lwd=2)
S = irlba(tXd.mat,nu=20,nv=20) # very slow beyond 30 or so
X = S$u
n = nrow(X)
cmb = expand.grid(i=1:n, j=1:n)
allpairs = matrix(apply(cmb,1,cosine_similarity_matrix),n,n) # get all pairwise cosine similarity measures
hist(allpairs[allpairs<1],100,main='Distribution of topical similarity at CogSci 2013',ylab='Density',xlab='Similarity score between a pair of abstracts (cosine)')
cmb = expand.grid(i=studs, j=studs)
compare_studs = matrix(apply(cmb,1,cosine_similarity_matrix),length(studs),length(studs))
compare_studs = compare_studs[compare_studs<1]
points(mean(compare_studs),1000,pch=15)
points(c(mean(compare_studs)-sd(compare_studs),mean(compare_studs)+sd(compare_studs)),c(1000,1000),type='l',lwd=2)
hist(allpairs[allpairs<1],100,main='Distribution of topical similarity at CogSci 2013',ylab='Density',xlab='Similarity score between a pair of abstracts (cosine)')
cmb = expand.grid(i=studs, j=studs)
compare_studs = matrix(apply(cmb,1,cosine_similarity_matrix),length(studs),length(studs))
compare_studs = compare_studs[compare_studs<1]
points(mean(compare_studs),1000,pch=15)
points(c(mean(compare_studs)-sd(compare_studs),mean(compare_studs)+sd(compare_studs)),c(20000,20000),type='l',lwd=2)
hist(allpairs[allpairs<1],100,main='Distribution of topical similarity at CogSci 2013',ylab='Density',xlab='Similarity score between a pair of abstracts (cosine)')
cmb = expand.grid(i=studs, j=studs)
compare_studs = matrix(apply(cmb,1,cosine_similarity_matrix),length(studs),length(studs))
compare_studs = compare_studs[compare_studs<1]
points(mean(compare_studs),20000,pch=15)
points(c(mean(compare_studs)-sd(compare_studs),mean(compare_studs)+sd(compare_studs)),c(20000,20000),type='l',lwd=2)
dim(X)
S = irlba(tXd.mat,nu=5,nv=5) # very slow beyond 30 or so
X = S$u
# let's compare ALL PAIRS of abstracts
n = nrow(X)
cmb = expand.grid(i=1:n, j=1:n)
allpairs = matrix(apply(cmb,1,cosine_similarity_matrix),n,n) # get all pairwise cosine similarity measures
hist(allpairs[allpairs<1],100,main='Distribution of topical similarity at CogSci 2013',ylab='Density',xlab='Similarity score between a pair of abstracts (cosine)')
# compare just the students
cmb = expand.grid(i=studs, j=studs)
compare_studs = matrix(apply(cmb,1,cosine_similarity_matrix),length(studs),length(studs))
compare_studs = compare_studs[compare_studs<1]
points(mean(compare_studs),20000,pch=15)
points(c(mean(compare_studs)-sd(compare_studs),mean(compare_studs)+sd(compare_studs)),c(20000,20000),type='l',lwd=2)
points(mean(compare_studs),10000,pch=15)
points(c(mean(compare_studs)-sd(compare_studs),mean(compare_studs)+sd(compare_studs)),c(10000,10000),type='l',lwd=2)
S = irlba(tXd.mat,nu=15,nv=15) # very slow beyond 30 or so
X = S$u
# let's compare ALL PAIRS of abstracts
n = nrow(X)
cmb = expand.grid(i=1:n, j=1:n)
allpairs = matrix(apply(cmb,1,cosine_similarity_matrix),n,n) # get all pairwise cosine similarity measures
hist(allpairs[allpairs<1],100,main='Distribution of topical similarity at CogSci 2013',ylab='Density',xlab='Similarity score between a pair of abstracts (cosine)')
# compare just the students
cmb = expand.grid(i=studs, j=studs)
compare_studs = matrix(apply(cmb,1,cosine_similarity_matrix),length(studs),length(studs))
compare_studs = compare_studs[compare_studs<1]
points(mean(compare_studs),20000,pch=15)
points(c(mean(compare_studs)-sd(compare_studs),mean(compare_studs)+sd(compare_studs)),c(20000,20000),type='l',lwd=2)
i = 483
maxi = which.max(allpairs[i,])
maxi
allpairs = tri.upper(allpairs)
allpairs = upper(allpairs)
sparse
sparseMatrix
sparsify
allpairs = sparseMatrix(lower.tri(allpairs))
allpairs = lower.tri(allpairs)
allpairs
n = nrow(X)
cmb = expand.grid(i=1:n, j=1:n)
allpairs = matrix(apply(cmb,1,cosine_similarity_matrix),n,n) # get all pairwise cosine similarity measures
allpairs = lower.tri(allpairs)
hist(allpairs[allpairs<1],100,main='Distribution of topical similarity at CogSci 2013',ylab='Density',xlab='Similarity score between a pair of abstracts (cosine)')
# compare just the students
cmb = expand.grid(i=studs, j=studs)
compare_studs = matrix(apply(cmb,1,cosine_similarity_matrix),length(studs),length(studs))
compare_studs = compare_studs[compare_studs<1]
points(mean(compare_studs),20000,pch=15)
points(c(mean(compare_studs)-sd(compare_studs),mean(compare_studs)+sd(compare_studs)),c(20000,20000),type='l',lwd=2)
allpairs[allpairs<1]
allpairs
hist(allpairs)
allpairs = matrix(apply(cmb,1,cosine_similarity_matrix),n,n) # get all pairwise cosine similarity measures
hist(allpairs[allpairs<1],100,main='Distribution of topical similarity at CogSci 2013',ylab='Density',xlab='Similarity score between a pair of abstracts (cosine)')
# compare just the students
cmb = expand.grid(i=studs, j=studs)
compare_studs = matrix(apply(cmb,1,cosine_similarity_matrix),length(studs),length(studs))
compare_studs = compare_studs[compare_studs<1]
points(mean(compare_studs),20000,pch=15)
points(c(mean(compare_studs)-sd(compare_studs),mean(compare_studs)+sd(compare_studs)),c(20000,20000),type='l',lwd=2)
n = nrow(X)
cmb = expand.grid(i=1:n, j=1:n)
allpairs = matrix(apply(cmb,1,cosine_similarity_matrix),n,n) # get all pairwise cosine similarity measures
hist(allpairs[allpairs<1],100,main='Distribution of topical similarity at CogSci 2013',ylab='Density',xlab='Similarity score between a pair of abstracts (cosine)')
# compare just the students
cmb = expand.grid(i=studs, j=studs)
compare_studs = matrix(apply(cmb,1,cosine_similarity_matrix),length(studs),length(studs))
compare_studs = compare_studs[compare_studs<1]
points(mean(compare_studs),20000,pch=15)
points(c(mean(compare_studs)-sd(compare_studs),mean(compare_studs)+sd(compare_studs)),c(20000,20000),type='l',lwd=2)
